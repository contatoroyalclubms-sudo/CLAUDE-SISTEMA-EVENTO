import { MemorySystem } from '../core/memory-system';
export interface FrontendTask {
    id: string;
    type: 'ui_component' | 'page_development' | 'state_management' | 'responsive_design' | 'performance_optimization' | 'accessibility';
    description: string;
    framework: 'react' | 'vue' | 'angular' | 'nextjs' | 'nuxt';
    requirements: any;
    designSpecs?: any;
    projectContext: string;
}
export declare class FrontendDevAgent {
    private memorySystem;
    private readonly logger;
    private readonly agentId;
    private mcpTools;
    constructor(memorySystem: MemorySystem);
    executeTask(task: FrontendTask): Promise<any>;
    private createUIComponent;
    private developPage;
    private implementStateManagement;
    private implementResponsiveDesign;
    private optimizeFrontendPerformance;
    private implementAccessibility;
    private generateComponentName;
    private generateComponentStructure;
    private defineComponentProps;
    private defineComponentState;
    private generateComponentMethods;
    private generateTSXCode;
    private generateComponentStyles;
    private generateComponentTests;
    private generateStorybookStories;
    private applyDesignPatterns;
    private implementComponentAccessibility;
    private optimizeComponentPerformance;
    private generatePageName;
    private definePageRoute;
    private generatePageLayout;
    private generatePageSections;
    private generatePageComponent;
    private generatePageStyles;
    private implementSEOOptimization;
    private generatePageMetadata;
    private implementRouting;
    private implementLazyLoading;
    private implementErrorBoundaries;
    private implementLoadingStates;
    private implementResponsiveBehavior;
    private implementPagePerformance;
    private selectStateManagementStrategy;
    private generateStore;
    private generateActions;
    private generateReducers;
    private generateSelectors;
    private enforceImmutability;
    private normalizeStateShape;
    private implementMiddleware;
    private generateStateTests;
    private setupDevTools;
    getAgentStatus(): Promise<any>;
    private defineBreakpoints;
    private implementGridSystem;
    private implementResponsiveTypography;
    private implementResponsiveSpacing;
    private implementResponsiveImages;
    private implementResponsiveNavigation;
    private adaptComponentsForMobile;
    private generateResponsiveTests;
    private implementCodeSplitting;
    private implementTreeShaking;
    private implementMinification;
    private implementCompression;
    private implementServerSideRendering;
    private implementStaticGeneration;
    private implementImageLazyLoading;
    private implementResourcePrefetching;
    private implementBrowserCaching;
    private implementServiceWorker;
    private implementCDNCaching;
    private implementWebVitalsMonitoring;
    private implementPerformanceMonitoring;
    private setupLighthouseCI;
    private implementAriaLabels;
    private implementAriaRoles;
    private implementAriaStates;
    private implementLandmarks;
    private implementKeyboardNavigation;
    private implementKeyboardShortcuts;
    private implementFocusManagement;
    private implementSkipLinks;
    private implementColorContrast;
    private implementAccessibleTypography;
    private implementAccessibleIcons;
    private implementReducedMotion;
    private setupAxeCoreTesting;
    private setupScreenReaderTesting;
    private setupA11yLighthouse;
    private implementWCAGCompliance;
}
